% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dwc_coordinates.R
\name{dwc_coordinates}
\alias{dwc_coordinates}
\title{Prepare geographic coordinates and convert to decimal degrees if needed}
\usage{
dwc_coordinates(
  locationID,
  lon,
  lat,
  verbatimCoordinateSystem,
  verbatimSRS = "unknown"
)
}
\arguments{
\item{locationID}{The location identifier. See:
\url{http://rs.tdwg.org/dwc/terms/locationID}}

\item{lon}{Longitude. This will be assigned to "verbatimLongitude" in the
returned tibble. See: \url{http://rs.tdwg.org/dwc/terms/verbatimLongitude}.
Note that this must be a character value if \code{lon} is in "degrees decimal
minutes" or "degrees minutes seconds".}

\item{lat}{Latitude. This will be assigned to "verbatimLatitude" in the
returned tibble. See: \url{http://rs.tdwg.org/dwc/terms/verbatimLatitude}.
Note that this must be a character value if \code{lat} is in "degrees decimal
minutes" or "degrees minutes seconds".}

\item{verbatimCoordinateSystem}{Supported terms are "decimal degrees",
"degrees decimal minutes" or "degrees minutes seconds". See:
\url{http://rs.tdwg.org/dwc/terms/verbatimCoordinateSystem}}

\item{verbatimSRS}{The spatial reference system associated with the
coordinates. Given as an EPSG code as in the example: "EPSG:4326". See:
\url{http://rs.tdwg.org/dwc/terms/verbatimSRS}.}
}
\value{
A \code{\link[tibble]{tibble}} with Darwin Core terms decimalLongitude,
decimalLatitude, geodeticDatum, verbatimLongitude, verbatimLatitude,
verbatimCoordinateSystem and verbatimSRS.
}
\description{
This function prepares the raw (verbatim) coordinate information and if
necessary, converts coordinates from 'degrees minutes seconds' or 'degrees
decimal minutes' to 'decimal degrees' using the R package
\href{https://docs.ropensci.org/parzer/}{parzer}.
}
\details{
Note that where longitude and latitude are provided in decimal degrees, this
function will round these to a maximum of seven decimal places.
}
\examples{
data("thylacine_data")
thylacine_data |>
dplyr::mutate(dwc_coordinates(lon = longitude_dms, lat = latitude_dms,
verbatimCoordinateSystem = "degrees minutes seconds",
verbatimSRS = "EPSG:4326"))
}
